apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "com.ibotta.gradle.aop"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

android {
    namespace 'me.jdvp.androidaspectexample'
    defaultConfig {
        applicationId "me.jdvp.androidaspectexample"
        minSdkVersion 23
        targetSdkVersion 34
        compileSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    /*
    Required when using above Kotlin 1.5, otherwise Kotlin lambdas will be compiled using
    LambdaMetafactory.metafactory() which means that aspects cannot be matched since the
    generated lambdas won't have the expected method names. You can see my write-up of the
    issue here:
    https://github.com/Ibotta/gradle-aspectj-pipeline-plugin/issues/8
     */
    kotlinOptions {
        freeCompilerArgs = ["-Xsam-conversions=class"]
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    lint {
        checkAllWarnings true
        warningsAsErrors true

        informational "NewerVersionAvailable",
                "GradleDependency",
                "ConvertToWebp"

        disable "InvalidPackage"
    }
}

dependencies {
    // AppCompat
    implementation "androidx.appcompat:appcompat:1.7.0"

    // AspectJ - Required for the Ibotta AspectJ Plugin
    // That plugin is compiled against v1.9.6 but here we
    // are trying to use the latest to ensure compatibility
    implementation "org.aspectj:aspectjrt:1.9.22.1"

    // If minSdk is like 25 or below, we seemingly need to desugar when
    // using aspectjrt 1.9.22 or above
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")

    // Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test:core-ktx:1.5.0"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
}
